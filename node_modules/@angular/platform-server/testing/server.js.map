{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-server/testing/server.ts"],"names":[],"mappings":";AAAA,wBAAmC,yBAAyB,CAAC,CAAA;AAC7D,yBAAuE,mBAAmB,CAAC,CAAA;AAC3F,wBAAmG,2BAA2B,CAAC,CAAA;AAC/H,qBAA0H,eAAe,CAAC,CAAA;AAC1I,wBAA+B,mCAAmC,CAAC,CAAA;AAEnE,6BAAmD,iBAAiB,CAAC,CAAA;AACrE,yDAAuC,6CAA6C,CAAC,CAAA;AACrF,+BAA+B,uBAAuB,CAAC,CAAA;AAEvD,iCAAuI,2BAA2B,CAAC,CAAA;AACnK,yCAA+F,6BAA6B,CAAC,CAAA;AAC7H,uBAA+B,iBAAiB,CAAC,CAAA;AACjD,wBAAkB,uBAAuB,CAAC,CAAA;AAE1C;IACE,iCAAgB,CAAC,WAAW,EAAE,CAAC;IAC/B,0BAAgB,CAAC,KAAK,EAAE,CAAC;AAC3B,CAAC;AAED;;GAEG;AACU,sCAA8B;AACvC,kBAAkB,CAAA;IAChB,gCAAyB;IACzB,qBAAqB,CAAC;QACpB,OAAO,EAAE,2BAAoB;QAC7B,QAAQ,EAAE,eAAe;QACzB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEN;IACE,IAAI,CAAC;QACH,MAAM,CAAC,iCAAM,EAAE,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAE;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAGD;IACE,MAAM,CAAC,IAAI,aAAM,CAAC,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;AAClD,CAAC;AAGD;;GAEG;AACU,yCAAiC;AAC1C,kBAAkB,CAAA;IAChB,6FAA6F;IAC7F,aAAa;IACb,mCAA4B,EAAE,6BAAkB,EAAE,iDAA8B;IAChF,uBAAuB,CAAC,EAAC,OAAO,EAAE,2BAAQ,EAAE,UAAU,EAAE,MAAM,EAAC;IAC/D,uBAAuB,CAAC,EAAC,OAAO,EAAE,0CAAe,EAAE,QAAQ,EAAE,2CAAgB,EAAC;IAC9E,uBAAuB,CAAC,EAAC,OAAO,EAAE,mBAAY,EAAE,WAAW,EAAE,0CAAe,EAAC;IAC7E,uBAAuB,CAAC,EAAC,OAAO,EAAE,8BAAe,EAAE,QAAQ,EAAE,kCAAmB,EAAC;IACjF,+BAAY;IACZ,uBAAuB,CAAC;QACtB,OAAO,EAAE,wCAAqB;QAC9B,QAAQ,EAAE,kCAAe;QACzB,KAAK,EAAE,IAAI;KACZ;IACD,uBAAuB,CAAC,EAAC,OAAO,EAAE,cAAG,EAAE,QAAQ,EAAE,cAAG,EAAC;IACrD,uBAAuB,CAAC,EAAC,OAAO,EAAE,aAAM,EAAE,QAAQ,EAAE,GAAG,EAAC;IACxD,uBAAuB,CAAC,EAAC,OAAO,EAAE,2CAAgB,EAAE,WAAW,EAAE,8CAAmB,EAAC;IACrF,8CAAmB,EAAE,0CAAuB;IAC5C,uBAAuB,CAAC,EAAC,OAAO,EAAE,4BAAiB,EAAE,QAAQ,EAAE,+BAAqB,EAAC;IACrF,uBAAuB,CAAC,EAAC,OAAO,EAAE,uBAAY,EAAE,QAAQ,EAAE,0BAAgB,EAAC,EAAE,aAAG;IAChF,uBAAuB,CAAC,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,mEAAwB,EAAC;IAC5F,8BAAoB;IACpB,uBAAuB,CAAC,EAAC,OAAO,EAAE,aAAM,EAAE,UAAU,EAAE,YAAY,EAAC;IACnE,uBAAuB,CAAC,EAAC,OAAO,EAAE,yBAAgB,EAAE,QAAQ,EAAE,8BAAoB,EAAC;CACpF,CAAC","sourcesContent":["import {MockLocationStrategy} from '@angular/common/testing';\nimport {COMPILER_PROVIDERS, DirectiveResolver, ViewResolver, XHR} from '@angular/compiler';\nimport {MockDirectiveResolver, MockViewResolver, TestComponentBuilder, TestComponentRenderer} from '@angular/compiler/testing';\nimport {APPLICATION_COMMON_PROVIDERS, APP_ID, NgZone, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, RootRenderer} from '@angular/core';\nimport {BrowserDetection} from '@angular/platform-browser/testing';\n\nimport {AnimationDriver, NoOpAnimationDriver} from '../core_private';\nimport {DOMTestComponentRenderer} from '../platform_browser_dynamic_testing_private';\nimport {Parse5DomAdapter} from '../src/parse5_adapter';\n\nimport {DOCUMENT, BROWSER_SANITIZATION_PROVIDERS, EventManager, EVENT_MANAGER_PLUGINS, ELEMENT_PROBE_PROVIDERS, DomEventsPlugin,} from '@angular/platform-browser';\nimport {getDOM, DomRootRenderer, DomRootRenderer_, DomSharedStylesHost, SharedStylesHost} from '../platform_browser_private';\nimport {LocationStrategy} from '@angular/common';\nimport {Log} from '@angular/core/testing';\n\nfunction initServerTests() {\n  Parse5DomAdapter.makeCurrent();\n  BrowserDetection.setup();\n}\n\n/**\n * Default platform providers for testing.\n */\nexport const TEST_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      PLATFORM_COMMON_PROVIDERS,\n      /*@ts2dart_Provider*/ {\n        provide: PLATFORM_INITIALIZER,\n        useValue: initServerTests,\n        multi: true\n      }\n    ];\n\nfunction appDoc() {\n  try {\n    return getDOM().defaultDoc();\n  } catch (e) {\n    return null;\n  }\n}\n\n\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: true});\n}\n\n\n/**\n * Default application providers for testing.\n */\nexport const TEST_SERVER_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      // TODO(julie: when angular2/platform/server is available, use that instead of making our own\n      // list here.\n      APPLICATION_COMMON_PROVIDERS, COMPILER_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS,\n      /* @ts2dart_Provider */ {provide: DOCUMENT, useFactory: appDoc},\n      /* @ts2dart_Provider */ {provide: DomRootRenderer, useClass: DomRootRenderer_},\n      /* @ts2dart_Provider */ {provide: RootRenderer, useExisting: DomRootRenderer},\n      /* @ts2dart_Provider */ {provide: AnimationDriver, useClass: NoOpAnimationDriver},\n      EventManager,\n      /* @ts2dart_Provider */ {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true\n      },\n      /* @ts2dart_Provider */ {provide: XHR, useClass: XHR},\n      /* @ts2dart_Provider */ {provide: APP_ID, useValue: 'a'},\n      /* @ts2dart_Provider */ {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n      DomSharedStylesHost, ELEMENT_PROBE_PROVIDERS,\n      /* @ts2dart_Provider */ {provide: DirectiveResolver, useClass: MockDirectiveResolver},\n      /* @ts2dart_Provider */ {provide: ViewResolver, useClass: MockViewResolver}, Log,\n      /* @ts2dart_Provider */ {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n      TestComponentBuilder,\n      /* @ts2dart_Provider */ {provide: NgZone, useFactory: createNgZone},\n      /* @ts2dart_Provider */ {provide: LocationStrategy, useClass: MockLocationStrategy}\n    ];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}